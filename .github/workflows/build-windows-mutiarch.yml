name: Build Multi‑Arch Windows Binaries

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build-windows:
    name: Build ${{ matrix.arch }} for Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [x64, arm64]
        node-version: [18, 20, 22]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Docker CLI
        uses: docker/setup-buildx-action@v2

      - name: Setup dockcross wrapper
        run: |
          # choose the right dockcross image
          IMAGE=$(
            if [ "${{ matrix.arch }}" = "arm64" ]; then
              echo dockcross/windows-arm64
            else
              echo dockcross/windows-amd64
            fi
          )
          docker pull $IMAGE
          docker run --rm $IMAGE > ./dockcross
          chmod +x ./dockcross

      - name: Build & package inside container
        run: |
          ./dockcross bash << 'EOF'
          set -eux

          # bootstrap Node.js from NodeSource
          curl -fsSL https://deb.nodesource.com/setup_${{ matrix.node-version }}.x | bash -
          apt-get update
          apt-get install -y nodejs python3 build-essential

          # CI‑only build step (avoids fallback logic)
          npm ci --ignore-scripts
          npm run build-native

          # package your .node + shared-libs into a tarball
          npm run package
          EOF

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.arch }}-node${{ matrix.node-version }}
          path: build/stage/*.tar.gz

      - name: Publish to GitHub Release
        env:
          NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx node-pre-gyp-github publish --release
